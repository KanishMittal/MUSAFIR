{"ast":null,"code":"var _s = $RefreshSig$();\n// import { useState, useEffect } from 'react';\n\n// const useFetch = (url) => {\n//     const [data, setData] = useState([]);\n//     const [error, setError] = useState(null);\n//     const [loading, setLoading] = useState(false);\n\n//     useEffect(() => {\n\n//         const fetchData = async () => {\n//             setLoading(true)\n\n//             try {\n//                 const res = await fetch(url)\n//                 if (!res.ok) {\n//                     setError('failed to fetch')\n//                     alert('failed to fetch')\n//                 }\n//                 const result = await res.json()\n//                 setData(result.data)\n//             } catch (err) {\n//                 setError(err.mesaage)\n//                 setLoading(false)\n//             }\n//         };\n//         fetchData();     \n//     }, [url])\n\n//     return {\n//         data,\n//         error,\n//         loading,\n//     }\n// }\n\n// export default useEffect;\n\nimport { useState, useEffect } from 'react';\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const res = await fetch(url);\n        if (!res.ok) {\n          throw new Error('Failed to fetch');\n        }\n        const result = await res.json();\n        setData(result.data);\n        setError(null); // Clear any previous errors\n      } catch (err) {\n        setError(err.message); // Corrected typo here\n        alert(err.message); // Optional: Show an alert for the error\n      } finally {\n        setLoading(false); // Reset loading state\n      }\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    error,\n    loading\n  };\n};\n_s(useFetch, \"6nhoqVvctpRRYiww7uwVz/g7/BM=\");\nexport default useFetch; // Corrected export","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","error","setError","loading","setLoading","fetchData","res","fetch","ok","Error","result","json","err","message","alert"],"sources":["D:/MUSAFIR/frontend/src/hooks/useFetch.js"],"sourcesContent":["// import { useState, useEffect } from 'react';\r\n\r\n// const useFetch = (url) => {\r\n//     const [data, setData] = useState([]);\r\n//     const [error, setError] = useState(null);\r\n//     const [loading, setLoading] = useState(false);\r\n\r\n//     useEffect(() => {\r\n\r\n//         const fetchData = async () => {\r\n//             setLoading(true)\r\n\r\n//             try {\r\n//                 const res = await fetch(url)\r\n//                 if (!res.ok) {\r\n//                     setError('failed to fetch')\r\n//                     alert('failed to fetch')\r\n//                 }\r\n//                 const result = await res.json()\r\n//                 setData(result.data)\r\n//             } catch (err) {\r\n//                 setError(err.mesaage)\r\n//                 setLoading(false)\r\n//             }\r\n//         };\r\n//         fetchData();     \r\n//     }, [url])\r\n\r\n//     return {\r\n//         data,\r\n//         error,\r\n//         loading,\r\n//     }\r\n// }\r\n\r\n// export default useEffect;\r\n\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n\r\n            try {\r\n                const res = await fetch(url);\r\n                if (!res.ok) {\r\n                    throw new Error('Failed to fetch');\r\n                }\r\n                const result = await res.json();\r\n                setData(result.data);\r\n                setError(null); // Clear any previous errors\r\n            } catch (err) {\r\n                setError(err.message); // Corrected typo here\r\n                alert(err.message); // Optional: Show an alert for the error\r\n            } finally {\r\n                setLoading(false); // Reset loading state\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [url]);\r\n\r\n    return {\r\n        data,\r\n        error,\r\n        loading,\r\n    };\r\n};\r\n\r\nexport default useFetch; // Corrected export"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,YAAY;MAC1BD,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAI;QACA,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAG,CAAC;QAC5B,IAAI,CAACQ,GAAG,CAACE,EAAE,EAAE;UACT,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;QACtC;QACA,MAAMC,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;QAC/BX,OAAO,CAACU,MAAM,CAACX,IAAI,CAAC;QACpBG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,OAAOU,GAAG,EAAE;QACVV,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC;QACvBC,KAAK,CAACF,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC;MACxB,CAAC,SAAS;QACNT,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB;IACJ,CAAC;;IAEDC,SAAS,EAAE;EACf,CAAC,EAAE,CAACP,GAAG,CAAC,CAAC;EAET,OAAO;IACHC,IAAI;IACJE,KAAK;IACLE;EACJ,CAAC;AACL,CAAC;AAAC,GAjCIN,QAAQ;AAmCd,eAAeA,QAAQ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}